version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo

jobs:
  install:
    executor: node
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: "~"
          paths:
            - repo

  lint:
    executor: node
    steps:
      - attach_workspace:
          at: "~"
      - run:
          name: Run linter script
          command: yarn lint

  build:
    executor: node
    steps:
      - attach_workspace:
          at: "~"
      - run:
          name: Build production
          command: yarn build

  deploy:
    executor: node
    steps:
      - attach_workspace:
          at: "~"
      - run:
          name: Setup ssh key
          command: |
            mkdir ~/.ssh
            chmod 700 ~/.ssh
            echo > ~/.ssh/known_hosts 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
            echo ${SSH_KEY_GITHUB} | base64 --decode - >~/.ssh/id_ed25519
            chmod 0600 ~/.ssh/id_ed25519
      - run:
          name: Configure git
          command: |
            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
            git config --global gc.auto 0 || true
            git config --global user.email "auto-deploy@circleci"
            git config --global user.name "auto-deploy"

      - run:
          name: Deploy website to gh-pages branch
          command: |
            unset SSH_AUTH_SOCK  # use the key we just installed
            yarn deploy

  docker:
    executor: node
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: "~"
      - run:
          name: Build docker preview image
          command: |
            # The preview website will show the WHOAMI string in the
            # header (see _header.njk)
            export WHOAMI="${CIRCLE_BRANCH} ${CIRCLE_BUILD_NUM} ${CIRCLE_SHA1}"
            yarn docker-preview
      - run:
          name: Login to dockerhub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
      - run:
          name: Upload image
          command: |
            CLEAN_BRANCH=${CIRCLE_BRANCH##*/}
            # e.g. transforms 'bridge/pre-release' to 'pre-release'

            docker tag preview.trustlines.foundation trustlines/preview.trustlines.foundation:$CLEAN_BRANCH
            docker tag preview.trustlines.foundation trustlines/preview.trustlines.foundation:$CLEAN_BRANCH$CIRCLE_BUILD_NUM
            docker push trustlines/preview.trustlines.foundation:$CLEAN_BRANCH
            docker push trustlines/preview.trustlines.foundation:$CLEAN_BRANCH$CIRCLE_BUILD_NUM

            echo Uploaded trustlines/preview.trustlines.foundation:$CLEAN_BRANCH, trustlines/preview.trustlines.foundation:$CLEAN_BRANCH$CIRCLE_BUILD_NUM


workflows:
  version: 2
  default:
    jobs:
      - install:
          filters:
            branches:
              ignore: gh-pages
      - lint:
          filters:
            branches:
              ignore: gh-pages
          requires:
            - install
      - build:
          filters:
            branches:
              ignore: gh-pages
          requires:
            - install
      - docker:
          filters:
            branches:
              ignore: gh-pages
          context: docker-credentials
          requires:
            - install
      - deploy:
          context: deploy-www.trustlines.foundation
          filters:
            branches:
              only: master
          requires:
            - install
